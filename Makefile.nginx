VERSION := 1.11.5
NAME := nginx-odoo-9-1
PREFIX := /opt/nginx_odoo9
DIRS := $(PREFIX)/conf $(PREFIX)/conf.d $(PREFIX)/subpaths $(PREFIX)/html $(PREFIX)/sites $(PREFIX)/cache

include Makefile.vars

define DOCKER_CMD :=
docker run \
--name $(NAME) \
--dns $(container_dns) \
-e "SERVICE_NAME=$(NAME)" \
--volumes-from=$(NAME)-data \
-v "$(PREFIX)/conf/nginx.conf:/etc/nginx/nginx.conf" \
-d \
nginx:$(VERSION)
endef

define DOCKER_DATA_CMD :=
docker run \
--name $(NAME)-data \
-u root \
-v "$(PREFIX)/conf.d:/etc/nginx/conf.d" \
-v "$(PREFIX)/subpaths:/etc/nginx/subpaths-enabled" \
-v "$(PREFIX)/html:/var/www/html" \
-v "$(PREFIX)/sites:/etc/nginx/sites-enabled" \
-v "$(PREFIX)/cache:/var/cache/nginx" \
nginx:$(VERSION) \
bash -c "bash -c 'mkdir -p /var/nginx/cache; chown nginx -R /var/nginx/cache;'"
endef

include Makefile.help
include Makefile.functions
include Makefile.container

.PHONY +: run rerun rm clean test restart bash

setup: create_dirs create_config

run: setup _run_data _run ##@default Starts the container.

rerun: _rerun ##@targets Stops and starts the container.

rm: _rm _rm_data ##@targets Stops and removes the container.

clean: _clean ##@targets Stops and removes the container and removes all created files.
	sudo rm -rf $(PREFIX)

test: _test ##@targets Tests if the container is running.
	
restart: _restart ##@targets Restarts the container.

bash: test _bash ##@targets Executes the bash inside the running container.

create_dirs: $(DIRS)

create_config:
	sudo cp nginx/default.conf $(PREFIX)/conf.d/
	sudo cp nginx/nginx.conf $(PREFIX)/conf/
	sudo cp nginx/odoo_proxy.conf $(PREFIX)/subpaths/

$(DIRS):
	sudo mkdir -p $@
